{"version":3,"sources":["App/Card/CardBody/CardBody.module.scss","App/Card/CardHeader/CardHeader.tsx","Helpers/index.ts","App/Card/CardBody/CardBody.tsx","App/Card/Card.tsx","App/App.tsx","reportWebVitals.ts","index.tsx","App/Card/CardHeader/CardHeader.module.scss","App/App.module.scss","App/Card/Card.module.scss","Services/AppService.ts"],"names":["module","exports","CardHeader","name","state","badgeUrl","className","styles","header","badgeContainer","src","undefined","alt","getMailTo","address","officerName","officerId","incidentNumber","body","CardBody","webSite","phoneNumber","customer","officer","incident","value","href","pattern","i","replace","mask","substring","email","idNumber","number","target","rel","incidentInfo","Card","card","service","AppService","App","getCustomer","getOfficer","getIncident","app","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","params","token","URLSearchParams","window","location","search","get","this","Buffer","from","toString","param"],"mappings":"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","file":"static/js/main.9963f07f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"CardBody_body__3s1F4\",\"value\":\"CardBody_value__2yEuS\",\"incidentInfo\":\"CardBody_incidentInfo__O7qqN\"};","import React from 'react';\r\nimport styles from './CardHeader.module.scss';\r\n\r\nexport interface HeaderProps {\r\n  name?: string;\r\n  state?: string;\r\n  badgeUrl?: string;\r\n}\r\n\r\nexport const CardHeader = ({\r\n  name,\r\n  state,\r\n  badgeUrl\r\n}: HeaderProps): React.ReactElement<HeaderProps> => {\r\n  return (\r\n    <div className={styles.header}>\r\n      <div className={styles.badgeContainer}>\r\n        <img src={badgeUrl || undefined} alt=\"\" />\r\n      </div>\r\n\r\n      {name && <h2>{name}</h2>}\r\n\r\n      {state && <h3>{state}</h3>}\r\n    </div>\r\n  );\r\n};\r\n","function mask(value: string, pattern: string) {\r\n  let i = 0;\r\n  return pattern.replace(/_/g, () => value[i++]);\r\n}\r\n\r\nexport function getPhoneLabel(phoneNumber: string) {\r\n  const withouthUSCode: string = phoneNumber.substring(2);\r\n  return mask(withouthUSCode, '(___) ___-____');\r\n}\r\n\r\nexport function getWebSiteLabel(webSite: string) {\r\n  return webSite.replace(/http[s]?:\\/\\//, '');\r\n}\r\n\r\nexport function getMailTo(\r\n  address: string,\r\n  officerName: string,\r\n  officerId: string,\r\n  incidentNumber?: string\r\n) {\r\n  let header: string = `${address}?subject=`;\r\n  if (incidentNumber) {\r\n    header += `Incident Number ${incidentNumber}`;\r\n  }\r\n\r\n  let body: string = `&body=To Whom It May Concern%2c%0A%0AIn regards to:%0A`;\r\n  if (incidentNumber) {\r\n    body += `Incident Number ${incidentNumber}%0A`;\r\n  }\r\n  body += `Officer ${officerName}%0A`;\r\n  body += `Officer ID ${officerId}%0A`;\r\n  body += '%0AMessage%0A%0APreferred Contact Method:%0A%0ASincerely%2c';\r\n\r\n  return header + body;\r\n}\r\n","import React from 'react';\r\nimport styles from './CardBody.module.scss';\r\nimport { Customer, Officer, Incident } from '../../../Models';\r\nimport { getPhoneLabel, getWebSiteLabel, getMailTo } from '../../../Helpers';\r\n\r\nexport interface BodyProps {\r\n  customer: Customer;\r\n  officer: Officer;\r\n  incident: Incident;\r\n}\r\n\r\nexport const CardBody = ({\r\n  customer,\r\n  officer,\r\n  incident\r\n}: BodyProps): React.ReactElement<BodyProps> => {\r\n  return (\r\n    <div className={styles.body}>\r\n      <ul>\r\n        {customer.phoneNumber && (\r\n          <li>\r\n            <label>Phone</label>\r\n\r\n            <br />\r\n\r\n            <a className={styles.value} href={`tel:${customer.phoneNumber}`}>\r\n              {getPhoneLabel(customer.phoneNumber)}\r\n            </a>\r\n          </li>\r\n        )}\r\n\r\n        {customer.email && (\r\n          <li>\r\n            <label>Email</label>\r\n\r\n            <br />\r\n\r\n            <a\r\n              className={styles.value}\r\n              href={`mailto:${getMailTo(\r\n                customer.email,\r\n                officer.name as string,\r\n                officer.idNumber as string,\r\n                incident.number\r\n              )}`}\r\n            >\r\n              {customer.email}\r\n            </a>\r\n          </li>\r\n        )}\r\n\r\n        {customer.webSite && (\r\n          <li>\r\n            <label>Website</label>\r\n\r\n            <br />\r\n\r\n            <a\r\n              className={styles.value}\r\n              href={customer.webSite}\r\n              target=\"_blank\"\r\n              rel=\"noreferrer\"\r\n            >\r\n              {getWebSiteLabel(customer.webSite)}\r\n            </a>\r\n          </li>\r\n        )}\r\n\r\n        {officer.name && (\r\n          <li>\r\n            <label>Officer Name</label>\r\n\r\n            <br />\r\n\r\n            <span className={styles.value}>{officer.name}</span>\r\n          </li>\r\n        )}\r\n\r\n        {officer.idNumber && (\r\n          <li>\r\n            <label>Officer ID Number</label>\r\n\r\n            <br />\r\n\r\n            <span className={styles.value}>{officer.idNumber}</span>\r\n          </li>\r\n        )}\r\n      </ul>\r\n\r\n      {incident.number && (\r\n        <div className={styles.incidentInfo}>\r\n          <hr />\r\n          <ul>\r\n            <li>\r\n              <label>Incident Number</label>\r\n\r\n              <br />\r\n\r\n              <span className={styles.value}>{incident.number}</span>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport styles from './Card.module.scss';\r\nimport { CardHeader } from './CardHeader/CardHeader';\r\nimport { CardBody } from './CardBody/CardBody';\r\nimport { Customer, Officer, Incident } from '../../Models';\r\n\r\nexport interface CardProps {\r\n  customer: Customer;\r\n  officer: Officer;\r\n  incident: Incident;\r\n}\r\n\r\nexport const Card = ({\r\n  customer,\r\n  officer,\r\n  incident\r\n}: CardProps): React.ReactElement<CardProps> => {\r\n  return (\r\n    <div className={styles.card}>\r\n      <CardHeader\r\n        name={customer.name}\r\n        state={customer.state}\r\n        badgeUrl={customer.badgeUrl}\r\n      />\r\n\r\n      <hr />\r\n\r\n      <CardBody customer={customer} officer={officer} incident={incident} />\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport styles from './App.module.scss';\r\nimport { Card } from './Card/Card';\r\nimport AppService from '../Services/AppService';\r\nimport { Customer, Officer, Incident } from '../Models';\r\n\r\nconst service = new AppService();\r\n\r\nconst App = (): React.ReactElement<{}> => {\r\n  const customer: Customer = service.getCustomer();\r\n  const officer: Officer = service.getOfficer();\r\n  const incident: Incident = service.getIncident();\r\n\r\n  return (\r\n    <div className={styles.app}>\r\n      <Card customer={customer} officer={officer} incident={incident} />\r\n\r\n      <footer>Powered by SmartForce Technologies, Inc.</footer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"CardHeader_header__1MNAn\",\"badgeContainer\":\"CardHeader_badgeContainer__9bAEd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__7KyKx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__2wHQ6\"};","import { Customer, Officer, Incident } from '../Models';\r\n\r\nexport interface AppServiceProps {\r\n  getParamValue: (param: string) => string | undefined;\r\n  getCustomer: () => Customer;\r\n  getOfficer: () => Officer;\r\n  getIncident: () => Incident;\r\n}\r\n\r\nexport default class AppService implements AppServiceProps {\r\n  params: URLSearchParams;\r\n\r\n  constructor() {\r\n    const token: string | null = new URLSearchParams(\r\n      window.location.search\r\n    ).get('token');\r\n\r\n    this.params = token\r\n      ? new URLSearchParams(Buffer.from(token, 'base64').toString())\r\n      : new URLSearchParams();\r\n  }\r\n\r\n  public getParamValue(param: string): string | undefined {\r\n    return this.params.get(param) || undefined;\r\n  }\r\n\r\n  public getCustomer(): Customer {\r\n    return {\r\n      name: this.params.get('cn'),\r\n      state: this.params.get('cs'),\r\n      badgeUrl: this.params.get('cb'),\r\n      phoneNumber: this.params.get('cp'),\r\n      email: this.params.get('cm'),\r\n      webSite: this.params.get('cw')\r\n    } as Customer;\r\n  }\r\n\r\n  public getOfficer(): Officer {\r\n    return {\r\n      name: this.params.get('on'),\r\n      idNumber: this.params.get('oid')\r\n    } as Officer;\r\n  }\r\n\r\n  public getIncident(): Incident {\r\n    return {\r\n      number: this.params.get('in')\r\n    } as Incident;\r\n  }\r\n}\r\n"],"sourceRoot":""}